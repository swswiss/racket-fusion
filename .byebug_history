exit
tournament_presenter.tournament.status == "false"
ceva
tournament_presenter.tournament.status
exit
tournament_presenter.tournament.status
tournament_presenter.tournament.status == "closed"
ceva
exit
ceva
exit
ceva
exit
params
exit
params
exit
params
exit
@tournament.update(status: true)
	@tournament = Tournament.find(params[:id])
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
Tournament.find(25)
params
exit
@classes_lvl1
exit
tournament_presenter.tournament.max_lvl1
exit
params
exit
current_user.admin?
exit
current_user
params
exit
tweet_presenter.tweet
tweet_presenter
tweet
params
@tweet
exit
self.tournament.registrations.where(user_id: current_user.id)
exit
self.tournament.registrations.where(user_id: current_user.id)
pp self.tournament.registrations.where(user_id: current_user.id).first
pp self.tournament.registrations.where(user_id: current_user.id).first.level_registration
pp self.tournament.registrations.where(user_id: current_user.id).first
pp self.tournament.registrations.where(user_id: current_user.id).level_registration
pp self.tournament.registrations.where(user_id: current_user.id)
current_user
pp self.tournament.registrations
self.tournament.registrations.size
self.tournament.registrations
self.tournament
self
exit
level_param
exit
level_param
exit
level_param
self.tournament.registrations
self.tournament
self.tournaments
self
params
exit
tournament_presenter.tournament.registrations.where(level_registration: "level_4")
tournament_presenter.tournament.registrations
tournament_presenter.tournament
tournament_presenter
exit
tournament.registrations.find(params[:id])
exit
params
tournament.registrations.find(params[:id])
exit
tournament.registrations
tournament.registrations.find(params[:id])
tournament
params
exit
params
exit
@registration = current_user.registrations.create(tournament: tournament)
params
exit
params
exit
params
exit
Tournament.find(24)
Tournament
params
exit
@registration = current_user.registrations.create(tournament: tournament)
exit
params
exit
params
exit
params
exit
params
exit
self
params
parameters
exit
params
continue
self
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params[:tournament_id].class
params[:tournament_id]
params
exit
bundle exec rails routes -c tournaments
params
exit
params
exit
Tournament
User.current_role
User.current
User
self.registrated_users
self
params
current_user
@current_user
exit
@current_user
current_user
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
@error_messages
exit
@error_messages
exit
@tournament
exit
@tournament
exit
@tournament
exit
tournaments
exit
tournaments
exit
@tournament
tournaments
exit
next
tournaments.name
tournaments
exit
tournaments
exit
self.id
self
self.name
self.first
exit
self
self.created_at
self
exit
exig
exit
tournaments
params
exit
params
 @all_tournaments.size
 @all_tournaments
continue
@tournament.save
continue
next
@tournament.errors
@tournament.save
@tournament
exit
tweet_presenter.tweet.liked_users
tweet_presenter.tweet
tweet_presenter
tweet
tweet.liked_users
tweet_liked_by_current_user?
tweet_presenter.like_heart_image
user
current_user
@current_user
tweet_presenter
exit
next
tweet.liked_users.include?(current_user)
current_user
tweet.liked_users
tweet
exit
@like = current_user.likes.create(tweet: tweet)
current_user.likes.size
current_user.likes
current_user
urrent_user
@like
exit
params
exit
params
continue
params
exit
params
