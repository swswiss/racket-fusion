<% if params[:action] == "print_groups_medium" %>
    <%= image_tag wicked_pdf_asset_base64('fusion.png'), width: "135" %><br>
<% end %>
<% if params[:action] != "print_groups_medium" %>
<div class="modal fade" id="add_match" tabindex="-1" aria-labelledby="add_match" aria-hidden="true">
<div class="modal-dialog modal-sm"> 
	<div class="modal-content">
		<div class="modal-header">
			<button type="button" class="btn-close mx-0" data-bs-dismiss="modal" aria-label="Close"></button>
		</div>
		<div class="modal-body">
			<%= render "shared/add_match", tournament: @tournament %>
		</div>
	</div>
</div>
</div>
<%end%>
<%= turbo_frame_tag "groupsss" do %>
<center><% @groups_with_matches.each_with_index do |(group, matches), index| %>
    <%= turbo_frame_tag "group_#{group.id}" do %>
    <% if current_user.admin? %>
        <h7>Group <%= (index + 'A'.ord).chr + " "+ group.id.to_s %></h7>
        <% else %>
        <h7>Group <%= (index + 'A'.ord).chr  %></h7>
        <% end %>
        <% if current_user.admin? %>
            <% if params[:action] != "print_groups_medium" %>
            <%= link_to group_path(group), method: :delete, data: { turbo_method: :delete }, class: "btn btn-sm float-end", style: "font-size: 7px;" do %>
                <%= image_tag "cross-button.png", width: "17" %>
            <% end %>
        
            <%= link_to print_groups_medium_group_path(group, format: :pdf), method: :get, class: "btn btn-sm float-end", style: "font-size: 7px;" do %>
                <%= image_tag "printer.png", width: "17" %>
            <% end %>
            <%= link_to csv_groups_medium_group_path(group, format: :xlsx), method: :get, class: "btn btn-sm float-end", style: "font-size: 7px;" do %>
                <%= image_tag "csv.png", width: "17" %>
            <% end %>
            <%if @tournament.double == false%>
            <%= link_to add_match_to_group_groups_path, method: :post, data: { turbo_method: :post, bs_toggle: "modal", bs_target: "#add_match" }, class: "btn btn-sm float-end", style: "font-size: 7px;" do %>
                <%= image_tag "add.png", width: "17" %>   
            <% end %>
            <% end %>
            <% end %>
        <% end %>

       

        <%= form_tag update_scores_group_group_path(group), method: :post, remote: true do %>
            <table class="tournament-table">
                <thead>
                    <tr>
                        <th>nr.</th>
                        <% if current_user.admin? %>
                        <th>id</th>
                        <% end %>
                        <th style="min-width: 180px;">Match</th>
                        <th>Score</th>
                        <th>Date</th>
                        <% if current_user.admin? %>
                        <% if params[:action] != "print_groups_medium" %>
                            <th>Score</th>
                            <th>Destroy</th>
                        <% end %>
                        <% end %>
                    </tr>
                </thead>
                <tbody>
                <% matches.each_with_index do |match, match_index| %>
                    <tr id="match_<%= match.id %>">
                        <td><%= match_index + 1 %></td>
                        <% if current_user.admin? %>
                        <td><%= match.id %></td>
                        <% end %>
                        <td>
                            <% if @tournament.double == false  %>
                                <%= "#{Registration.find(match.first_player).user.username} vs #{Registration.find(match.second_player).user.username}" %>
                            <% else  %>
                                <%= "#{Registration.find(match.first_player).name} vs #{Registration.find(match.second_player).name}" %>
                            <% end %>
                        </td>
                        <% if current_user.admin? %>
                            <td><%= text_field_tag "match_scores[#{match.id}]", match.score, disabled: false %></td>
                        <% else  %>
                            <td><%= text_field_tag "match_scores[#{match.id}]", match.score, disabled: true %></td>
                        <% end %>
                        <td>

                        <% if current_user.admin? %>
                            <%= datetime_field_tag "match_dates[#{match.id}]", match.date&.strftime('%Y-%m-%dT%H:%M'), class: "form-control datetime-picker", disabled: false, style: "font-size: 11px;" %>
                        <% else  %>
                            <%= datetime_field_tag "match_dates[#{match.id}]", match.date&.strftime('%Y-%m-%dT%H:%M'), class: "form-control datetime-picker", disabled: true, style: "font-size: 11px;" %>

                        <% end %>
              </td>
              <% if params[:action] != "print_groups_medium" %>
                        <% if current_user.admin? %>
                            <td ><%= submit_tag "Submit", class: "btn btn-sm tiny-button me-2", style: "background-color: #53B092;"%></td >
                            
                            <td ><%= link_to match_path(match), method: :delete, data: { turbo_method: :delete }, class: "btn btn-sm tiny-button", style: "background-color: #53B092;" do %>
                                Destroy
                                <% end %></td>
                                
                        <% else %>
                            
                        <% end %>
                        <% end %>
                    </tr>
                <% end %>
                </tbody>
            </table>
        <% end %>
    <% end %>
<% end %>
</center>
<% end %>
<br>

		<% if @data.present? %>
					<center>Results Players
					<table class="tournament-table">

					<thead>
						<tr>
							<th>Group</th>
							<th>Player</th>
                            <th>Matches played</th>
							<th>Sets Won</th>
							<th>Sets Lost</th>
							<th>Matches Won</th>
                            <th>Games Won</th>
						</tr>
					</thead>
					<tbody>
						<% @data.each_with_index do |(group_id, players_data), index| %>
							<% players_data.each do |player_id, data| %>
                                <%if player_id.present?%>
								<tr style="background-color: <%= index.even? ? '#ffe6e6' : '#e6f7ff' %>;">
									<td><%= (index + 'A'.ord).chr %></td>
									<td>
                                   
                                    <% if @tournament.double == false  %>
                                        <%= player_id.nil? ? "(nil)" : Registration.find(player_id).user.username %>
                                    <% else  %>
                                        <%= player_id.nil? ? "(nil)" : Registration.find(player_id).name %>
                                    <% end  %>
                                    
                                    </td>
                                    <td><%= data[:matches_played] %></td>
									<td><%= data[:sets_won] %></td>
									<td><%= data[:sets_lost] %></td>
									<td><%= data[:matches_won] %></td>
                                    <td><%= data[:games_won] %></td>
								</tr>
                                <% end  %>
							<% end %>
						<% end %>
					</tbody>
				</table>
				</center>
		<%end%>
        <br>
<!-- <center>
<table class="tennis-table">
        <tr>
            <th colspan="2">Court 1</th>
            <th colspan="2">Court 2</th>
        </tr>
        <tr>
           <td colspan="2"> stefanache stefanache vs stefanache stefanache</td>
           <td colspan="2"> stefanache stefanache vs stefanache stefanache</td>
            
        </tr>
        <tr>
            <th colspan="2">Court 3</th>
            <th colspan="2">Court 4</th>
        </tr>
        <tr>
        <td colspan="2"> Player 1 vs Player 2</td>
        <td colspan="2"> Player 1 vs Player 2</td>
        </tr>
    </table>
    </center> 
    <%= form_tag(update_scores_group_group_path(Group.first), method: "post", id: "dynamic-form") do %>
        <div id="select-inputs" class="mb-3">

    <%= select_tag "options", options_for_select([["Option 1", 1], ["Option 2", 2], ["Option 3", 3]]), class: "form-select mb-1", id: "options-select" %>
  </div>
  <button type="button" id="add-input" class="btn btn-primary me-2">Add Select</button>
  <button type="button" id="hide-inputs" class="btn btn-secondary">Hide All</button>
  <%= submit_tag "Submit", class: "btn btn-success" %> -->
      <% end %>


<style>
.tournament-table {
	border-collapse: collapse;
	width: 60%;
}

.tournament-table th, .tournament-table td {
	border: 1px solid #ddd;
	padding: 3px;
	text-align: center;
	font-size: 11px; 
	height: 1px;
}

.tournament-table th {
	background-color: #f2f2f2;
}

.tiny-button {
	font-size: 7px;
	color: white;
	padding: 3px 7px;
}
.tiny-button:hover {
color: white;
}
.tennis-table {
            border-collapse: collapse;
            margin: 10px auto;
        }
        .tennis-table th, .tennis-table td {
            border: 1px solid black;
            width: 370px;
            height: 63px;
            text-align: center;
            vertical-align: middle;
            font-size: 10px;
            font-weight: bold;
        }
        .tennis-table th {
            background-color: #f2f2f2; /* Darker green for headers */
            height: 17px;
        }

</style>

<script>
// app/assets/javascripts/your_script_name.js

document.addEventListener("DOMContentLoaded", function() {
  var addButton = document.getElementById("add-input");
  var hideButton = document.getElementById("hide-inputs");
  var selectInputs = document.getElementById("select-inputs");
  var optionsSelect = document.getElementById("options-select");
  
  addButton.addEventListener("click", function() {
    var newSelect = document.createElement("select");
    newSelect.name = "items[]";
    newSelect.className = "form-select mb-1";

    // Clone options from existing select
    for (var i = 0; i < optionsSelect.options.length; i++) {
      var option = optionsSelect.options[i];
      var newOption = document.createElement("option");
      newOption.value = option.value;
      newOption.text = option.text;
      newSelect.appendChild(newOption);
    }

    selectInputs.appendChild(newSelect);
  });

  hideButton.addEventListener("click", function() {
    // Remove all select inputs
    selectInputs.innerHTML = "";
  });
});



</script>